/*
Deployment script for Timesheet

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Timesheet"
:setvar DefaultFilePrefix "Timesheet"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
/*
The column [dbo].[PurchaseOrder].[CompanyId] is being dropped, data loss could occur.

The column [dbo].[PurchaseOrder].[IssuedBy] on table [dbo].[PurchaseOrder] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The column Amount on table [dbo].[PurchaseOrder] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column Amount in table [dbo].[PurchaseOrder] is currently  NCHAR (10) NULL but is being changed to  DECIMAL (18, 2) NOT NULL. Data loss could occur.

The column CreatedBy on table [dbo].[PurchaseOrder] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column CreatedBy in table [dbo].[PurchaseOrder] is currently  NCHAR (10) NULL but is being changed to  INT NOT NULL. Data loss could occur.

The column DateCreated on table [dbo].[PurchaseOrder] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.

The type for column DateCreated in table [dbo].[PurchaseOrder] is currently  NCHAR (10) NULL but is being changed to  DATETIME NOT NULL. Data loss could occur.

The type for column PurchaseOrderId in table [dbo].[PurchaseOrder] is currently  NCHAR (10) NOT NULL but is being changed to  INT NOT NULL. Data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[PurchaseOrder])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
/*
The column [dbo].[Timesheet].[Description] on table [dbo].[Timesheet] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Timesheet])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Rename refactoring operation with key fe5f812e-0c88-4d18-aa6d-0cbd9b21d50d is skipped, element [dbo].[Invoice].[Id] (SqlSimpleColumn) will not be renamed to InvoiceId';


GO
PRINT N'Starting rebuilding table [dbo].[PurchaseOrder]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PurchaseOrder] (
    [PurchaseOrderId] INT             NOT NULL,
    [IssuedBy]        INT             NOT NULL,
    [PurchaseOrderNo] NVARCHAR (50)   NULL,
    [Amount]          DECIMAL (18, 2) NOT NULL,
    [DateCreated]     DATETIME        NOT NULL,
    [CreatedBy]       INT             NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PurchaseOrder1] PRIMARY KEY CLUSTERED ([PurchaseOrderId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PurchaseOrder])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_PurchaseOrder] ([PurchaseOrderId], [Amount], [DateCreated], [CreatedBy])
        SELECT   [PurchaseOrderId],
                 [Amount],
                 [DateCreated],
                 [CreatedBy]
        FROM     [dbo].[PurchaseOrder]
        ORDER BY [PurchaseOrderId] ASC;
    END

DROP TABLE [dbo].[PurchaseOrder];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PurchaseOrder]', N'PurchaseOrder';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PurchaseOrder1]', N'PK_PurchaseOrder', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Timesheet]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Timesheet] (
    [TimesheetId]   INT            IDENTITY (1, 1) NOT NULL,
    [ProjectId]     INT            NOT NULL,
    [StaffId]       INT            NOT NULL,
    [TimeCodeId]    INT            NOT NULL,
    [StartDateTime] DATETIME       NOT NULL,
    [EndDateTime]   DATETIME       NULL,
    [Description]   NVARCHAR (400) NOT NULL,
    [DateCreated]   DATETIME       NOT NULL,
    [CreatedBy]     INT            NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Timesheet1] PRIMARY KEY CLUSTERED ([TimesheetId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Timesheet])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Timesheet] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Timesheet] ([TimesheetId], [ProjectId], [StaffId], [TimeCodeId], [StartDateTime], [EndDateTime], [DateCreated], [CreatedBy])
        SELECT   [TimesheetId],
                 [ProjectId],
                 [StaffId],
                 [TimeCodeId],
                 [StartDateTime],
                 [EndDateTime],
                 [DateCreated],
                 [CreatedBy]
        FROM     [dbo].[Timesheet]
        ORDER BY [TimesheetId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Timesheet] OFF;
    END

DROP TABLE [dbo].[Timesheet];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Timesheet]', N'Timesheet';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Timesheet1]', N'PK_Timesheet', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Invoice]...';


GO
CREATE TABLE [dbo].[Invoice] (
    [InvoiceId]       INT             NOT NULL,
    [CompanyId]       INT             NOT NULL,
    [IssuedTo]        INT             NOT NULL,
    [PurchaseOrderId] INT             NULL,
    [DateIssued]      DATETIME        NOT NULL,
    [DatePaid]        DATETIME        NULL,
    [Amount]          DECIMAL (18, 2) NOT NULL,
    [GST]             DECIMAL (18, 2) NOT NULL,
    [TotalAmount]     DECIMAL (18, 2) NOT NULL,
    [DateCreated]     DATETIME        NOT NULL,
    [CreatedBy]       INT             NOT NULL,
    PRIMARY KEY CLUSTERED ([InvoiceId] ASC)
);


GO
PRINT N'Creating [dbo].[InvoiceLineItem]...';


GO
CREATE TABLE [dbo].[InvoiceLineItem] (
    [InvoiceLineItemId] INT             NOT NULL,
    [InvoiceId]         INT             NOT NULL,
    [TimesheetId]       INT             NULL,
    [Description]       NVARCHAR (100)  NULL,
    [Amount]            DECIMAL (18, 2) NOT NULL,
    [GST]               DECIMAL (18, 2) NOT NULL,
    [TotalAmount]       DECIMAL (18, 2) NOT NULL,
    [DateCreated]       DATETIME        NULL,
    [CreatedBy]         INT             NULL,
    PRIMARY KEY CLUSTERED ([InvoiceLineItemId] ASC)
);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'fe5f812e-0c88-4d18-aa6d-0cbd9b21d50d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('fe5f812e-0c88-4d18-aa6d-0cbd9b21d50d')

GO

GO
PRINT N'Update complete.';


GO
